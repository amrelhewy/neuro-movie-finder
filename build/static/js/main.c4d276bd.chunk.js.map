{"version":3,"sources":["logo_transparent.png","start.js","Questions.js","Movies.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","start","state","username","open","style","height","backgroundColor","display","flexDirection","alignItems","src","require","alt","className","Input","placeholder","onChange","e","target","value","Button","variant","color","marginTop","onClick","setState","prevState","items","props","history","push","pathname","name","Dialog","this","aria-labelledby","aria-describedby","DialogContent","DialogContentText","id","DialogActions","autoFocus","Component","withRouter","Questions","category","duration","place","submitf","document","querySelector","textContent","circle","current","axios","post","then","res","movie","data","catch","createRef","justifyContent","location","marginLeft","defaultValue","CircularProgress","ref","Movies","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.c4d276bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_transparent.daf9f43e.png\";","import React, { Component } from \"react\";\nimport \"./start.css\";\nimport { Input } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {withRouter} from 'react-router-dom'\nimport DialogContentText from '@material-ui/core/DialogContentText';\nclass start extends Component {\n  state = {\n    username: \"\",\n    open:false,\n   \n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          backgroundColor: \"#f6c52a\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <img\n          src={require(\"./logo_transparent.png\")}\n          height=\"500vh\"\n          alt=\"no pic\"\n          className=\"logo\"\n        />\n\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Input\n            placeholder=\"Enter Your Name\"\n            className=\"input\"\n            onChange={(e) => {\n                this.state.username=e.target.value\n            \n            }}\n          />\n          <Button\n            variant=\"contained\"\n            style={{\n              backgroundColor: \"#31495d\",\n              color: \"white\",\n              marginTop: \"40px\",\n            }}\n            className=\"submit\"\n            onClick={()=>{\n             \n            if(this.state.username==='') return this.setState((prevState) => ({open: true, ...prevState.items}))\n            this.props.history.push({pathname:'/ask',state:{name:this.state.username}})\n            }}\n          >\n            Continue\n          </Button>\n        </div>\n\n\n\n\n\n        <Dialog\n        open={this.state.open}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Enter a valid username\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n         \n          <Button  color=\"primary\" autoFocus onClick={()=>{\n              this.setState((prevState) => ({open: false, ...prevState.items}))\n              \n          }}>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </div>\n    );\n  }\n}\nexport default withRouter(start)","import React, { Component, createRef } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./questions.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport axios from 'axios';\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.circle = createRef();\n  }\n  state = {\n    category: \"\",\n    duration: \"\",\n    place: \"\",\n    open: false,\n  };\n\n  submitf = (e) => {\n    if (\n      this.state.category === \"Choose a category\" ||\n      this.state.duration === \"Choose a duration\" ||\n      this.state.place === \"Choose a place\"\n    )\n      return this.setState((prevState) => ({ open: true, ...prevState.items }));\n    if (\n      this.state.category === \"\" ||\n      this.state.duration === \"\" ||\n      this.state.place === \"\"\n    )\n      return this.setState((prevState) => ({ open: true, ...prevState.items }));\n\n    document.querySelector(\".MuiButton-label\").textContent = \"Loading..\";\n    this.circle.current.style.display = \"\";\n    \n    axios.post('find',this.state).then((res)=>{\n\n    this.props.history.push({pathname:'/movies',state:{movie:res.data}});\n    }).catch(()=>{\n      \n    })\n  };\n  render() {\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          backgroundColor: \"#f6c52a\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          color: \"#31495d\",\n        }}\n      >\n        <h1 className=\"header\">Welcome {this.props.location.state.name}</h1>\n        <h2 className=\"header2\">\n          We'll ask you some questions in order to recommend movies for you ...\n        </h2>\n        <h3 className=\"header3\">\n          Please answer the questions below and we'll do the rest\n        </h3>\n        <form style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <div className=\"st\">\n            <h3>What category are you looking for?</h3>\n            <select\n              style={{ marginLeft: \"10px\", backgroundColor: \"transparent\" }}\n              onChange={(e) => {\n                this.state.category = e.target.value;\n              }}\n            >\n              <option defaultValue>Choose a category</option>\n              <option value=\"action\">Action</option>\n              <option value=\"adventure\">Adventure</option>\n              <option value=\"comedy\">Comedy</option>\n              <option value=\"drama\">Drama</option>\n              <option value=\"horror\">Horror</option>\n              <option value=\"Sci-Fi\">Sci-Fi</option>\n            </select>\n          </div>\n          <div className=\"nd\" style={{ marginTop: \"20px\" }}>\n            <h3>How long would you like the movie to be?</h3>\n            <select\n              style={{ marginLeft: \"10px\", backgroundColor: \"transparent\" }}\n              onChange={(e) => {\n                this.state.duration = e.target.value;\n              }}\n            >\n              <option defaultValue>Choose a duration</option>\n              <option value=\"1h\">Less than one hour</option>\n              <option value=\"2h\">Between 1 and 3 hours</option>\n              <option value=\"3h\">More than 3 hours</option>\n            </select>\n          </div>\n          <div className=\"rd\" style={{ marginTop: \"20px\" }}>\n            <h3>Where do you watch movies?</h3>\n            <select\n              style={{ marginLeft: \"10px\", backgroundColor: \"transparent\" }}\n              onChange={(e) => {\n                this.state.place = e.target.value;\n              }}\n            >\n              <option defaultValue>Choose a place</option>\n              <option value=\"online\">Online</option>\n              <option value=\"netflix\">Netflix</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          <Button\n            variant=\"contained\"\n            onClick={this.submitf}\n            className=\"sub\"\n            style={{\n              backgroundColor: \"#31495d\",\n              color: \"white\",\n              marginTop: \"30px\",\n            }}\n          >\n            Submit\n          </Button>\n         \n        </form>\n        <CircularProgress ref={this.circle} style={{ display: \"none\" }} />\n        <Dialog\n          open={this.state.open}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Answer the missing questions\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              color=\"primary\"\n              autoFocus\n              onClick={() => {\n                this.setState((prevState) => ({\n                  open: false,\n                  ...prevState.items,\n                }));\n              }}\n            >\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\nexport default withRouter(Questions);\n","import React, { Component } from 'react'\nimport './Movies.css'\nimport { withRouter } from 'react-router-dom'\n class Movies extends Component {\n    render() {\n        return (\n            <div  style={{\n                height: \"100vh\",\n                backgroundColor: \"#f6c52a\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                color: \"#31495d\",\n              }}> \n               <h1 className=\"h\">Here is our recommended movie ...</h1> \n               <h3 className=\"m\">{this.props.location.state.movie}</h3>\n            </div>\n        )\n    }\n}\nexport default withRouter(Movies)","import React from 'react';\nimport Start from './start'\nimport Questions from './Questions'\nimport Movies from './Movies'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nfunction App() {\n  return (\n    <Router>\n\n\n    <div className=\"App\">\n      <Switch>\n      <Route exact path=\"/\">\n        <Start/>\n        </Route>\n        <Route exact path=\"/ask\">\n        <Questions/>\n        </Route>\n        <Route exact path=\"/movies\">\n          <Movies/>\n        </Route>\n      </Switch>\n   \n\n    </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}